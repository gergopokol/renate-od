from atomic.tools import Transition
import numpy as np


ATOMIC_DICT = {'Li': {'e': {'2s-eloss': {'param': [5.39, 0.085, -0.004, 0.757, -0.178], 'eq': '0'},
                            '2s-2p': {},
                            '2s-3s': {},
                            '2s-3p': {},
                            '2s-3d': {},
                            '2s-4s': {},
                            '2s-4p': {},
                            '2s-4d': {},
                            '2s-4f': {},
                            '2p-eloss': {},
                            '2p-3s': {},
                            '2p-3p': {},
                            '2p-3d': {},
                            '2p-4s': {},
                            '2p-4p': {},
                            '2p-4d': {},
                            '2p-4f': {},
                            '3s-eloss': {},
                            '3s-3p': {},
                            '3s-3d': {},
                            '3s-4s': {},
                            '3s-4p': {},
                            '3s-4d': {},
                            '3s-4f': {},
                            '3p-eloss': {},
                            '3p-3d': {},
                            '3p-4s': {},
                            '3p-4p': {},
                            '3p-4d': {},
                            '3p-4f': {},
                            '3d-eloss': {},
                            '3d-4s': {},
                            '3d-4p': {},
                            '3d-4d': {},
                            '3d-4f': {},
                            '4s-eloss': {},
                            '4s-4p': {},
                            '4s-4d': {},
                            '4s-4f': {},
                            '4p-eloss': {},
                            '4p-4d': {},
                            '4p-4f': {},
                            '4d-eloss': {},
                            '4d-4f': {},
                            '4f-eloss': {}},
                      'p': {'2s-eloss': {},
                            '2s-2p': {},
                            '2s-3s': {},
                            '2s-3p': {},
                            '2s-3d': {},
                            '2s-4s': {},
                            '2s-4p': {},
                            '2s-4d': {},
                            '2s-4f': {},
                            '2p-eloss': {},
                            '2p-3s': {},
                            '2p-3p': {},
                            '2p-3d': {},
                            '2p-4s': {},
                            '2p-4p': {},
                            '2p-4d': {},
                            '2p-4f': {},
                            '3s-eloss': {},
                            '3s-3p': {},
                            '3s-3d': {},
                            '3s-4s': {},
                            '3s-4p': {},
                            '3s-4d': {},
                            '3s-4f': {},
                            '3p-eloss': {},
                            '3p-3d': {},
                            '3p-4s': {},
                            '3p-4p': {},
                            '3p-4d': {},
                            '3p-4f': {},
                            '3d-eloss': {},
                            '3d-4s': {},
                            '3d-4p': {},
                            '3d-4d': {},
                            '3d-4f': {},
                            '4s-eloss': {},
                            '4s-4p': {},
                            '4s-4d': {},
                            '4s-4f': {},
                            '4p-eloss': {},
                            '4p-4d': {},
                            '4p-4f': {},
                            '4d-eloss': {},
                            '4d-4f': {},
                            '4f-eloss': {}},
                      'Z': {'2s-eloss': {},
                            '2s-2p': {},
                            '2s-3s': {},
                            '2s-3p': {},
                            '2s-3d': {},
                            '2s-4s': {},
                            '2s-4p': {},
                            '2s-4d': {},
                            '2s-4f': {},
                            '2p-eloss': {},
                            '2p-3s': {},
                            '2p-3p': {},
                            '2p-3d': {},
                            '2p-4s': {},
                            '2p-4p': {},
                            '2p-4d': {},
                            '2p-4f': {},
                            '3s-v': {},
                            '3s-eloss': {},
                            '3s-3d': {},
                            '3s-4s': {},
                            '3s-4p': {},
                            '3s-4d': {},
                            '3s-4f': {},
                            '3p-eloss': {},
                            '3p-3d': {},
                            '3p-4s': {},
                            '3p-4p': {},
                            '3p-4d': {},
                            '3p-4f': {},
                            '3d-eloss': {},
                            '3d-4s': {},
                            '3d-4p': {},
                            '3d-4d': {},
                            '3d-4f': {},
                            '4s-eloss': {},
                            '4s-4p': {},
                            '4s-4d': {},
                            '4s-4f': {},
                            '4p-eloss': {},
                            '4p-4d': {},
                            '4p-4f': {},
                            '4d-eloss': {},
                            '4d-4f': {},
                            '4f-eloss': {}}},
               'H': {'e': {},
                     'p': {},
                     'Z': {}},
               'Na': {'e': {},
                      'p': {},
                      'Z': {}}
               }

CROSS_FUNC = {'0': lambda x, par: 1e-13*(par[1]*np.log(x/par[0]) + par[2]*(1-(par[0]/x)) +
                                         par[3]*(1-(par[0]/x))**2 + par[4]*(1-(par[0]/x))**3)/(par[0]*x),
              '1': '0'}


class CrossSection(object):
    def __init__(self, transition=Transition, impact_energy=float, extrapolate=False):
        self.transition = transition
        self.impact_energy = impact_energy
        self.generate_function()

    def generate_function(self):
        pass

    def show(self):
        pass
